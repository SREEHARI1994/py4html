from py4htmlpc import *

#Testing code used for ading to documentation as examples
heading("py4html is awesome",text_type="italics") #no argument for num and hence it defaults to 1 or biggest size
heading("py4html is aweosme")
line_break()
line_break()
line_break()
heading("py4html is awesome",2,"italics",{"color":"red"})
heading("py4html is awesome",num=1)
heading("py4html is awesome",2)
heading("py4html is awesome",3)
heading("py4html is awesome",4)
heading("py4html is awesome",5)
heading("py4html is awesome",6)
heading("py4html is awesome",text_type="sub",style={"color":"blue"})
heading("py4html is awesome",text_type="sup",style={"color":"green"})
heading("py4html is awesome",style={"color":"yellow"})
heading("py4html is awesome",3,style={"color":"violet"})
#same result as previous
heading("py4html is awesome",num=3,style={"color":"violet"})

biggest_heading("py4html is very useful")
biggest_heading("py4html is very good",text_type="italics",style={"color":"green"})
bigger_heading("py4html is very useful")
bigger_heading("py4html is very good",text_type="italics",style={"color":"red"})
big_heading("py4html is very useful")
big_heading("py4html is very good",style={"color":"violet"})
small_heading("py4html is very good")
small_heading("py4html is very good",style={"color":"orange"})
smaller_heading("py4html is very good",text_type="italics")
smaller_heading("py4html is very good",style={"color":"orange"})
smallest_heading("py4html is very good")
smallest_heading("py4html is very good",style={"color":"blue"})
line_break()
line_break()
simple_form=form(action="submit.js",method="POST")
line_break()
line_break()
simple_form.label("Enter Name:")
line_break()
line_break()
simple_form.input("text")
line_break()
line_break()
simple_form.label("Enter Address:")
line_break()
line_break()
simple_form.input("text",style={"width":"200px","height":"300px"})
line_break()
line_break()
simple_form.input("submit",value="Register")
simple_form.close()
line_break()
line_break()
line_break()
line_break()
checkform=form()
checkform.label("Enter the programming language of your choice")
line_break()
checkform.input("checkbox",checkbox_list=["Javascript##","Python##","C++##"])
checkform.close()
line_break()
line_break()
line_break()
line_break()
#nesting images,links,paragraphs in lists
biggest_heading("Putting images,links,paragraphs as list elements",style={"color":"red"})
ordered_list("first entry",image("Trackmania.jpg##",style={"width":"300px","height":"200px"}),
             add_link("Visit Google##","https:www.google.com"),
             paragraph("As you can see link and image are added as list entries##"))
paragraph("Trying to make paragraphs that end with hash characters by escaping it\\##")
line_break()
line_break()
line_break()
biggest_heading("Image as a clickable link",style={"color":"red"})
add_link(image("sr1.jpg##",style={"width":"100px","height":"200px"}),"https:wwww.facebook.com")

#Some Examples for Form, some of them are py4html reproductions of w3schools examples

bigger_heading("Password field")
paragraph("The "+ transform_text('input type="password"',"important")+ "defines a password field")
pass_form=form(action="/action_page.php")
pass_form.label("Username",id="un")
line_break()
pass_form.input("text",id="un")
line_break()
pass_form.label("Password",id="pa")
line_break()
pass_form.input("password",id="pa")
line_break()
line_break()
pass_form.input("submit",value="submit")
pass_form.close()
paragraph('The characters in a password field are masked (shown as asterisks or circles).')
